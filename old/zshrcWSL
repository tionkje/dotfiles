# moves prompt to the bottom of the window
tput cup $LINES

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=100000
SAVEHIST=100000
bindkey -e
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
# zstyle :compinstall filename '/home/Bastiaan/.zshrc'

autoload -Uz compinit
compinit -i
# End of lines added by compinstall
echo "Parsing ~/.zshrc"

alias ll='ls --color=auto -la'
alias ls='ls --color=auto'
alias ct='cleartool'
alias cr='dos2unix'

alias cd..='cd ..'

eval `dircolors -b`

setopt AUTO_CD
#setopt CORRECT
#setopt CORRECT_ALL
setopt INC_APPEND_HISTORY
#INC_APPEND_HISTORY
#setopt AUTO_LIST
setopt BASH_AUTO_LIST
setopt AUTO_PUSHD
unsetopt AUTO_RESUME
setopt HIST_IGNORE_DUPS
unsetopt NOMATCH
#disable interpretation of backslash in echo
setopt BSD_ECHO

#case insensitive completion with priority on case match (empty string is exact match)
compctl -M '' 'm:{a-zA-Z}={A-Za-z}'
autoload -U colors && colors

# If this is an xterm set the title to user@host:dir
case $TERM in
    xterm*)
        precmd () {print -Pn "\e]0;%~\a"}
        ;;
esac


# key bindings
bindkey "\e[1~" beginning-of-line
bindkey "\e[4~" end-of-line
bindkey "\e[5~" beginning-of-history
bindkey "\e[6~" end-of-history
bindkey "\e[3~" delete-char
bindkey "\e[2~" quoted-insert
bindkey "\e[5C" forward-word
bindkey "\eOc" emacs-forward-word
bindkey "\e[5D" backward-word
bindkey "\eOd" emacs-backward-word
bindkey "\e\e[C" forward-word
bindkey "\e\e[D" backward-word
bindkey "^H" backward-delete-word
# for rxvt
bindkey "\e[8~" end-of-line
bindkey "\e[7~" beginning-of-line
# for non RH/Debian xterm, can't hurt for RH/DEbian xterm
bindkey "\eOH" beginning-of-line
bindkey "\eOF" end-of-line
# for freebsd console
bindkey "\e[H" beginning-of-line
bindkey "\e[F" end-of-line
# completion in the middle of a line
bindkey '^i' expand-or-complete-prefix


csdiff () {
  echo 'csdiff' "$1" "$2";
  dwdiff --algorithm=best --context=4 --punctuation --color --aggregate-changes $*
}

#eval `keychain -q --agents ssh --eval id_rsa`
export EDITOR=vim
export PATH=~/.local/bin:~/bin/:~/nodejs/bin/:$PATH

#source ~/.ssh-find-agent.sh
#set_ssh_agent_socket
#. ssh-find-agent.sh

#ssh-find-agent -a
#if [ -z "$SSH_AUTH_SOCK" ]
#then
#   eval $(ssh_agent) > /dev/null
#   ssh-add -l >/dev/null || alias ssh='ssh-add -l >/dev/null || ssh-add && unalias ssh; ssh'
#fi


#https://superuser.com/questions/325662/how-to-make-ssh-agent-automatically-add-the-key-on-demand
# ssh-add -l > /dev/null || eval $(ssh-agent) > /dev/null;
# ssh-add -l > /dev/null || ssh-add ~/.ssh/agl_rsa

SSH_ENV="$HOME/.ssh/env"

function start_agent {
    echo "Initialising new SSH agent..."
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    source "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add ~/.ssh/agl_rsa;
}

# Source SSH settings, if applicable

if [ -f "${SSH_ENV}" ]; then
    source "${SSH_ENV}" > /dev/null
    ps -F ${SSH_AGENT_PID} > /dev/null || start_agent;
else
    start_agent;
fi

echo 'Current keys in agent:'
ssh-add -l



# for VIM and TMUX
if [ "$TERM" = "screen" ]; then
  export TERM=xterm-256color
fi

# get git info
# Load version control information
autoload -Uz vcs_info
precmd() { vcs_info }
# Format the vcs_info_msg_0_ variable
zstyle ':vcs_info:git:*' formats '%b'
# zstyle ':vcs_info:git*' formats "%{$fg[grey]%}%s %{$reset_color%}%r/%S%{$fg[grey]%} %{$fg[blue]%}%b%{$reset_color%}%m%u%c%{$reset_color%} "
# Set up the prompt (with git branch name)
setopt PROMPT_SUBST
# PROMPT='${vcs_info_msg_0_}'
PROMPT='%(1j. %j .)%{$fg_bold[red]%}${vcs_info_msg_0_} %{$fg_no_bold[yellow]%}${PWD/#$HOME/~}%{$reset_color%} > '


#PROMPT="%{$fg[red]%}%n%{$reset_color%}@%{$fg[cyan]%}%m%{$reset_color%}- %{$fg_no_bold[yellow]%}%~%{$reset_color%}% >"
# PROMPT="%{$fg_no_bold[yellow]%}%~%{$reset_color%}% >"
# PROMPT="%(1j. %j .) ${vcs_info_msg_0_} %{$fg_no_bold[yellow]%}%~%{$reset_color%}% >"

#source Dropbox/agnoster.zsh-theme
#export DOCKER_HOST=localhost:2375
fpath=(~/.zsh/completion $fpath)
# autoload -Uz compinit && compinit -i
export TERM=xterm-256color

# export DISPLAY=$(awk '/nameserver / {print $2; exit}' /etc/resolv.conf 2>/dev/null):0
# set DISPLAY variable to the IP automatically assigned to WSL2
export DISPLAY=$(cat /etc/resolv.conf | grep nameserver | awk '{print $2; exit;}'):0.0
export LIBGL_ALWAYS_INDIRECT=1

sudo /etc/init.d/dbus start &> /dev/null

# source /usr/share/doc/fzf/examples/key-bindings.zsh
# source /usr/share/doc/fzf/examples/completion.zsh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion





[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
